% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/OppSexSN.R
\name{OppSexSN}
\alias{OppSexSN}
\title{Create a subset of observations containing only opposite-sex couples}
\usage{
OppSexSN(
  Recipient,
  RecipientIDVariable = NULL,
  RecipientAgeVariable = NULL,
  Donor,
  DonorIDVariable = NULL,
  DonorAgeVariable = NULL,
  xiUsed = NULL,
  OmegaUsed = NULL,
  AlphaUsed = NULL,
  CoupleIDValue = NULL,
  HouseholdNumVariable = NULL,
  UserSeed = NULL,
  pValueToStop = NULL,
  NumIterations = 1e+06
)
}
\arguments{
\item{Recipient}{A data frame containing observations limited to one sex. An age column is required. Only include the ages that are eligible for partner allocation.}

\item{RecipientIDVariable}{The column number for the ID variable in the Recipient data frame.}

\item{RecipientAgeVariable}{The column number for the age variable in the Recipient data frame.}

\item{Donor}{A data frame containing observations limited to one sex. An age column is required. Only include the ages that will be allocated to partners.}

\item{DonorIDVariable}{The column number for the donor ID. Must be numeric.}

\item{DonorAgeVariable}{The column number for the age variable in the Donor data frame.}

\item{xiUsed}{The xi value for the skew normal distribution.}

\item{OmegaUsed}{The omega value for the skew normal distribution.}

\item{AlphaUsed}{The alpha value for the skew normal distribution.}

\item{CoupleIDValue}{The starting number for generating a variable that identifies the observations in a couple. Must be numeric.}

\item{HouseholdNumVariable}{The column name for the household variable. This must be supplied in quotes.}

\item{UserSeed}{The user-defined seed for reproducibility. If left blank the normal set.seed() function will be used.}

\item{pValueToStop}{The primary stopping rule for the function. If this value is not set, the critical p-value of .01 is used.}

\item{NumIterations}{The maximum number of iterations used to construct the coupled data frame. This has a default value of 1000000, and is the stopping rule
if the algorithm does not converge.}

\item{SNCenter}{The difference value used as the base. If this value is not set, the value 0 will be used.}
}
\value{
A data frame of an even number of observations that have been allocated into opposite-sex couples.
}
\description{
This function creates a data frame of couples, based on a population distribution of age differences. The distribution used is the skew normal.
Two data frames are required. The recipient data frame contains the age data, of one sex, to which the distribution will be applied. The
donor data frame contains the age data, of the other sex, from which the age counts to match are constructed. If the two data frames are different
lengths, the recipient data frame must be the shortest of the two. In this situation, a random subsample of the donor data frame will be used.
Both data frames must be restricted to only those ages that will have a couples match performed. No age reasonableness check is made.
An even number of observations is output, using the defined age-difference distribution between the female and male ages for the couples.
}
\details{
The function performs a reasonableness check for the first five variables. If any other parameters are missing, the usual error messages from the imported
functions will be output.

If desired, this can be used to construct same-sex couples.
}
\examples{
Recipients <- data.frame(cbind(PersonID = c(1:1000),
                              PersonAge = c(round(runif(200, min=18, max=23),0), round(runif(300, min=24, max=50),0), round(runif(500, min=51, max=90),0))))

Donors <- data.frame(cbind(PersonID = c(2001:4000),
                              PersonAge = c(round(runif(400, min=18, max=23),0), round(runif(500, min=24, max=50),0), round(runif(1100, min=51, max=90),0))))

ExampleOutput <- OppositeSex(Recipients, RecipientIDVariable=1, RecipientAgeVariable=2, Donors, DonorIDVariable=1, DonorAgeVariable=2, xiUsed=-2, OmegaUsed=4,
                              AlphaUsed=5, UserSeed=NULL, pValueToStop=.001, NumIterations=1000, CoupleIDValue = 10001, HouseholdNumVariable="TheHouseholds")
}

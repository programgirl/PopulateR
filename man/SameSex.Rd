% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/SameSex.R
\name{SameSex}
\alias{SameSex}
\title{Create a subset of observations containing only same-sex couples}
\usage{
SameSex(
  dataframe,
  ProbSameSex = NULL,
  UpWeightProp = NULL,
  UpWeightLowerAge = NULL,
  UpWeightUpperAge = NULL,
  AgeVariableIndex = NULL,
  CoupleIDValue = NULL,
  HouseholdNumVariable = NULL
)
}
\arguments{
\item{dataframe}{A data frame containing observations limited to one sex that includes an age column.}

\item{ProbSameSex}{The probability of any observation being assigned to a same-sex couple.}

\item{UpWeightProp}{The proportion of individuals who are to be over-sampled.}

\item{UpWeightLowerAge}{The youngest age for the over-sampling. Required if UpWeightProp value is provided.}

\item{UpWeightUpperAge}{The oldest age for the over-sampling. Required if UpWeightProp value is provided.}

\item{AgeVariableIndex}{The column number of the data frame that contains the ages.}

\item{CoupleIDValue}{The starting number for generating a variable that identifies the observations in a couple. Must be numeric.}

\item{HouseholdNumVariable}{The column name for the household variable. This must be supplied in quotes.}
}
\value{
A data frame of an even number of observations for allocation into same-sex couples. If CoupleIDValue is specified, household allocation will be performed.
}
\description{
This is a wrapper for randomly sampling observations into same-sex couples.
It is mainly used for data frames that contain a subset of observations that require over-sampling.
However, it can also be used to generate a simple random sample of observations.
An even number of observations is output.
}
\examples{
PersonDataframe <- data.frame(cbind(PersonID = c(1:1000),
                              PersonAge = c(round(runif(200, min=18, max=23),0), round(runif(300, min=24, max=50),0), round(runif(500, min=51, max=90),0))))
# create unweighted sample with no household variable
UnweightedExample <- SameSex(PersonDataframe,.1)
# create unweighted sample with household numbers
UnweightedExampleHouseholds <- SameSex(PersonDataframe, ProbSameSex=.1, AgeVariableIndex=2, CoupleIDValue=51, HouseholdNumVariable = "TheHouseholds")
# must supply the required columns when using household assignment
# doesn't work
ExampleHouseholdsWrong <- SameSex(PersonDataframe, ProbSameSex=.1, CoupleIDValue=51, HouseholdNumVariable = "TheHouseholds")
ExampleHouseholdsAlsoWrong <- SameSex(PersonDataframe, ProbSameSex=.1, AgeVariableIndex=2, CoupleIDValue=51, HouseholdNumVariable = TheHouseholds)
# No CoupleIDValue means that the household numbering subfunction is not performed
ExampleHouseholdsAlsoAlsoWrong <- SameSex(PersonDataframe, ProbSameSex=.1, AgeVariableIndex=2, HouseholdNumVariable = "TheHouseholds")
# create weighted example where 40\% of people in same-sex couples are aged between 24 and 50 years
WeightedExample <- SameSex(PersonDataframe, .1, .4, 24, 50, 2)
# add household numbering
WeightedWithNumbering <- SameSex(PersonDataframe, .1, .4, 24, 50, 2, 101, "TheHouseholds")
# check weighted subfunction worked
WeightedWithNumbering \%>\%
filter(PersonAge >=24 & PersonAge <=50) \%>\%
summarise(CountsCreated=n()) \%>\%
mutate(PercentCounts = CountsCreated/nrow(WeightedWithNumbering))
Example of downweights, can be used with upweight range is not contiguous
DownWeightedWithNumbering <- SameSex(PersonDataframe, .1, .2, 24, 50, 2, 101, "TheHouseholds")
DownWeightedWithNumbering \%>\%
filter(PersonAge >=24 & PersonAge <=50) \%>\%
summarise(CountsCreated=n()) \%>\%
mutate(PercentCounts = CountsCreated/nrow(DownWeightedWithNumbering))


}

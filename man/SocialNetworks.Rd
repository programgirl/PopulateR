% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/Networks.R
\name{SocialNetworks}
\alias{SocialNetworks}
\title{Create a subset of observations containing only opposite-sex couples}
\usage{
SocialNetworks(
  People,
  IDCol = NULL,
  AgeCol = NULL,
  HouseholdCol = NULL,
  NetworkCol = NULL,
  SDUsed = NULL,
  ProbSameNetwork = 0.5,
  UserSeed = NULL,
  NumIterations = 1e+06
)
}
\arguments{
\item{People}{A data frame containing people to be matched to each other using social networks.}

\item{IDCol}{The column number for each person's unique ID.}

\item{AgeCol}{The column number for the age variable.}

\item{HouseholdCol}{The column number for each person's household.}

\item{NetworkCol}{The column number for the network size.}

\item{SDUsed}{The standard deviation for the age differences between two people on an edge.}

\item{ProbSameNetwork}{The probability that a friend of a friend is an edge. For example, if A and B and friends, and B and C are friends, this is the probability that C is also a friend of A.}

\item{UserSeed}{The user-defined seed for reproducibility. If left blank the normal set.seed() function will be used.}

\item{NumIterations}{The maximum number of iterations used to construct the coupled data frame. This has a default value of 1000000, and is the stopping rule if the algorithm does not converge.}
}
\value{
A data frame of an even number of observations that have been allocated into opposite-sex couples.
}
\description{
This function creates a data frame of couples, based on a population distribution of age differences. The distribution used is the skew normal.
Two data frames are required. The recipient data frame contains the age data, of one sex, to which the distribution will be applied. The donor data frame contains the age data, of the other sex, from which the age counts to match are constructed. If the two data frames are different lengths, the recipient data frame must be the shortest of the two. In this situation, a random subsample of the donor data frame will be used.
The network size variable is the number of people in that person's networks, including the person. Thus, a person with a network size of 0 has no social contacts. A person with a network size of 1 has one social contact, and so forth.
}
\details{
Only a standard deviation is required, as the ages are centred around 0. The age of the person on a vertex is the age against which linked vertices are tested. A larger standard deviation enables the construction of networks with larger age differences. With triads, the age test is conducted comparing one person in the triad with the other two people. Thus, friends of friends will tend to be a similar age to friends.
The function attempts to ensure that no people in the same household will be placed inside the same network. However, this may be difficult to achieve given the number of networks. The number of iterations specified by the user ensures that the function will not enter an endless loop.


The function performs a reasonableness check for the first five variables. If any other parameters are missing, the usual error messages from the imported functions will be output.

If desired, this can be used to construct same-sex couples.
}
\examples{
Recipients <- data.frame(cbind(PersonID = c(1:1000),
                              PersonAge = c(round(runif(200, min=18, max=23),0), round(runif(300, min=24, max=50),0), round(runif(500, min=51, max=90),0))))

Donors <- data.frame(cbind(PersonID = c(2001:4000),
                              PersonAge = c(round(runif(400, min=18, max=23),0), round(runif(500, min=24, max=50),0), round(runif(1100, min=51, max=90),0))))

ExampleOutput <- OppositeSex(Recipients, RecipientIDCol=1, RecipientAgeCol=2, Donors, DonorIDCol=1, DonorAgeCol=2, DirectXi=-2, DirectOmega=4,
                              AlphaUsed=5, UserSeed=NULL, pValueToStop=.001, NumIterations=1000, IDStartValue = 10001, HouseholdNumVariable="TheHouseholds")
}
